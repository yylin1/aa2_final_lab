---
- name: Clean up service when it exists
  block:

    - name: Check if systemd flask app service file exists
      stat:
        path: "/etc/systemd/system/{{ flask_app_name }}.service"
      register: r_flask_service

    - when: r_flask_service.stat.exists
      name: Systemd configuration needs stopped and removed
      block:

        - name: Stop systemd flask app service
          service: 
            name: "{{ flask_app_name }}.service"
            state: stopped
            enabled: no
#              ignore_errors: yes

        - name: Remove systemd flask app service file
          file:
            path: "{{ __path }}"
            state: "{{ flask_install_state }}"
          loop:
            - "/etc/systemd/system/{{ flask_app_name }}.service"
            -  /usr/local/bin/launch_resource_hub   
          loop_control:
            loop_var: __path

- name: Remove pre-requisite pip3 packages
  pip:
    name: "{{ pip_dependencies }}"
    state: "{{ flask_install_state }}"
    executable: /usr/bin/pip3
      #      ignore_errors: yes

- name: Remove flask user
  user:
    name: "{{ flask_user }}"
    state: "{{ flask_install_state }}"

- name: Remove app yum packages
  package:
    name: "{{ __package }}"
    state: "{{ flask_install_state }}"
  loop: "{{ app_yum_packages }}"        
  loop_control:
    loop_var: __package

- name: Remove flask repo and virtualenv
  file:
    path: "{{ __path }}"
    state: "{{ flask_install_state }}"
  loop:
    -  "{{ flask_home }}/{{ flask_app_name }}"
    -  "{{ virtualenv_home }}/{{ flask_app_name }}"
  loop_control:
    loop_var: __path
