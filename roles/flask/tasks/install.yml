---
# tasks file for flask
- name: "Create flask user"
  user:
    name: "{{ flask_user }}"
    state: "{{ flask_install_state }}"

- name: "Install flask packages"
  package:
    name: "{{ __package }}"
    state: "{{ flask_install_state }}"
  loop: "{{ app_yum_packages }}"
  loop_control:
    loop_var: __package

- name: "Install flask repo {{ flask_repo }}"
  git:
    repo: "{{ flask_repo }}"
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    update: yes
    force: yes
  tags:
    - git

- name: "Change flask repo owner to {{ flask_user }} recursively"
  file:
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    owner: "{{ flask_user }}"

- name: "Virtualenv setup"
  block:
    - name: "Setup pre-requisite pip3 packages"
      pip:
        name: "{{ pip_dependencies }}"
        state: latest
        executable: /usr/bin/pip3

    - name: "Create virtualenv {{ virtualenv_name }} for Flask"
      pip:
        requirements: "{{ flask_home }}/{{ flask_app_name }}/requirements.txt"
        virtualenv: "{{ virtualenv_home }}/{{ flask_app_name }}"
        virtualenv_site_packages: no
        virtualenv_command: /usr/local/bin/virtualenv
  tags:
    - venv
    - virtualenv

- name: "Initialize flask app database resources"
  command: "{{ virtualenv_home }}/{{ flask_app_name }}/bin/python3 {{ flask_home }}/{{ flask_app_name }}/config.py"
  run_once: true

- name: "Generate {{ flask_app_name }} startup script"
  template:
    src: launch_resource_hub.j2
    dest: /usr/local/bin/launch_resource_hub
    mode: '0555'

- name: "template systemd service config"
  template:
    src: flask_service.j2
    dest: /etc/systemd/system/{{ flask_app_name }}.service
    mode: '0755'
  notify: start_flask_service
